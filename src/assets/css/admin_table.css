td .custom-datetime-input[type='datetime-local'] {
    border: none;
    outline: none;
    background-color: transparent;
    width: fit-content;
    font-size: inherit;
    /* pointer-events: none; */
}

td .custom-datetime-input::-webkit-calendar-picker-indicator {
    /* display: none; */
}

/* td[contenteditable='true'] .custom-datetime-input[type='datetime-local'] {
    pointer-events: all;
}

td[contenteditable='true']
    .custom-datetime-input::-webkit-calendar-picker-indicator {
    background-color: #ffffff;
    padding: 5px;
    cursor: pointer;
    display: block;
    border-radius: 3px;
} */

.img-wrapper {
    height: 200px;
    aspect-ratio: 1/1;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #fff;
}

.img-wrapper > img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
}

td .category-container {
    max-width: 400px;
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
}

td .category {
    text-wrap: nowrap;
    display: flex;
    padding: 3px;
    background: #efefef;
    border-radius: 4px;
    width: fit-content;
    align-items: center;
}

td .category span {
    margin-right: 5px;
}

td .category.add {
    position: relative;
    display: none;
}

td > select {
    border: none;
    background: none;
    font-size: inherit;
    appearance: none;
}

.category.add .category-popup {
    z-index: 1;
    position: absolute;
    width: max-content;
    display: flex;
    flex-direction: column;
    padding: 5px;
    border-radius: 4px;
    background: #fff;
    box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.19);
}

.category.add .category-popup > span {
    padding: 3px 5px;
    cursor: pointer;
}

td .category i {
    display: none;
    color: darkred;
    cursor: pointer;
}

td[contenteditable='true'] .category i {
    display: inline;
}

td .category.add i {
    color: #3a84a7;
}

td[contenteditable='true'] .category.add {
    display: block;
}

td[key='details'] {
    position: relative;
}

tr:has(td[error]) {
    /* background: rgb(236, 86, 86) !important; */
    border: 1px solid rgb(236, 86, 86);
}

/* td[error] {
    background: rgb(236, 86, 86);
} */

tr:hover td[error] {
    position: relative;
    overflow: visible;
}

tr td[error]:hover::before {
    content: attr(error);
    padding: 5px;
    border-radius: 3px;
    position: absolute;
    top: 0;
    left: 50%;
    transform: translate(-50%, -100%);
    z-index: 1;
    background: rgb(236, 86, 86);
    width: max-content;
}
